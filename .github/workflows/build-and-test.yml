name: Build and Test Docker Image

on:
  push:
    paths:
      - "docker/Dockerfile"
    branches-ignore:
      - main
  workflow_dispatch:
  pull_request:
    types: [opened, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }} # Ensures correct branch checkout
      
      - name: Get repository and branch details
        run: |
          echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
          echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build \
          -t ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:${{ env.BRANCH_NAME }}-latest \
          --output type=tar,dest=/tmp/${{ env.BRANCH_NAME }}.tar . -f docker/Dockerfile

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BRANCH_NAME }}
          path: /tmp/${{ env.BRANCH_NAME }}.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }} # Ensures correct branch checkout
      
      - name: Get repository and branch details
        run: |
          echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
          echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BRANCH_NAME }}
          path: /tmp/

      - name: Verify file exists
        run: |
          ls -l /tmp/${{ env.BRANCH_NAME }}.tar
          stat /tmp/${{ env.BRANCH_NAME }}.tar

      - name: Load image
        run: |
          cat /tmp/${{ env.BRANCH_NAME }}.tar | docker import - ghcr.io/${{ env.REPO_OWNER }}/${{ env.BRANCH_NAME }}-latest
          docker image ls -a
